###### STARTUP #######

###### STARTUP #######

accepteula
clearpart --alldrives
install --firstdisk=usb,local,remote --ignoressd --overwritevmfs
rootpw VMware1!VMware1!
reboot

%include /tmp/networkconfig
%pre --interpreter=busybox
# extract network info from bootup
VMK_INT="vmk0"
VMK_LINE=$(localcli network ip interface ipv4 get | grep "${VMK_INT}")
IPADDR=$(echo "${VMK_LINE}" | awk '{print $2}')
NETMASK=$(echo "${VMK_LINE}" | awk '{print $3}')
GATEWAY=$(esxcfg-route | awk '{print $5}')
DNS="10.4.0.1"
DOMAIN_NAME="acme.local"
HOSTNAME=$(echo ${IPADDR} | awk '{print "esxhost"$4}' FS=.)
#HOSTNAME=$(nslookup "${IPADDR}" "${DNS}" | grep Address | grep "${IPADDR}" | awk '{print $4}')
echo "network --bootproto=static --addvmportgroup=true --device=vmnic0 --ip=${IPADDR} --netmask=${NETMASK} --gateway=${GATEWAY} --nameserver=${DNS} --hostname=${HOSTNAME}" > /tmp/networkconfig
%firstboot --interpreter=busybox
 
###### SYSTEM CONFIG #######

esxcli system hostname set --host ${HOSTNAME} --domain ${DOMAIN_NAME} --fqdn "${HOSTNAME}.${DOMAIN_NAME}"
echo "--host ${HOSTNAME} --domain ${DOMAIN_NAME} --fqdn '${HOSTNAME}.${DOMAIN_NAME}'" > /tmp/hostnameconfig
# USB #
/etc/init.d/usbarbitrator stop
chkconfig usbarbitrator off
# NTP #
cat > /etc/ntp.conf << __NTP_CONFIG__
restrict default kod nomodify notrap noquery nopeer
restrict 127.0.0.1
server 10.4.0.5
server 0.vmware.pool.ntp.org
server 1.vmware.pool.ntp.org
__NTP_CONFIG__
/etc/init.d/ntpd start
chkconfig --add ntpd
# Enabling & Starting SSH
vim-cmd hostsvc/enable_ssh
vim-cmd hostsvc/start_ssh
 # Enable & Start ESXi Shell
vim-cmd hostsvc/enable_esx_shell
vim-cmd hostsvc/start_esx_shell
# Suppress ESXi Shell Warning"
esxcli system settings advanced set -o /UserVars/SuppressShellWarning -i 1
# assign license
vim-cmd vimsvc/license --set ZZZZZ-XXXXX-CCCCC-VVVVV-BBBBB

###### NETWORK #######

# add vSwitch1
esxcli network vswitch standard add -v vSwitch1
# vSwitch 0 Uplinks - White-box
esxcli network vswitch standard uplink add -v vSwitch0 -u vmnic0
esxcli network vswitch standard uplink add -v vSwitch0 -u vmnic2
# vSwitch 1 Uplinks - White-box
#esxcli network vswitch standard uplink add -v vSwitch0 -u vmnic1
# MTU + CDP
esxcli network vswitch standard set -m 1600 -c both -v vSwitch0
esxcli network vswitch standard set -m 9000 -c both -v vSwitch1
# vSwitch0 Portgroups
esxcli network vswitch standard portgroup add -p vssHostManagement -v vSwitch0
esxcli network vswitch standard portgroup set -p vssHostManagement -v 41
esxcli network vswitch standard portgroup add -p vssCloudManagement -v vSwitch0
esxcli network vswitch standard portgroup set -p vssCloudManagement -v 42
esxcli network vswitch standard portgroup add -p vssGeneralNetwork -v vSwitch0
esxcli network vswitch standard portgroup set -p vssGeneralNetwork -v 70
esxcli network vswitch standard portgroup add -p vssTenantNetwork -v vSwitch0
esxcli network vswitch standard portgroup set -p vssTenantNetwork -v 60
# vSwitch1 Portgroups
esxcli network vswitch standard portgroup add -p vssipStorage -v vSwitch1
esxcli network vswitch standard portgroup add -p vssVMotion -v vSwitch1
esxcli network vswitch standard portgroup set -p vssVMotion -v 44
esxcli network vswitch standard portgroup add -p vssVSAN -v vSwitch1
esxcli network vswitch standard portgroup set -p vssVSAN -v 51
# VMKernal Interfaces #
VMK0_IPADDR=$(esxcli network ip interface ipv4 get | grep vmk0 | awk '{print $2}')
VMK1_IPADDR=$(echo ${VMK0_IPADDR} | awk '{print "10.4.4."$4}' FS=.)
VMK2_IPADDR=$(echo ${VMK0_IPADDR} | awk '{print "10.5.0."$4}' FS=.)
VMK3_IPADDR=$(echo ${VMK0_IPADDR} | awk '{print "10.5.1."$4}' FS=.)
VMK0_NEW_IPADDR=$(echo ${VMK0_IPADDR} | awk '{print "10.4.1."$4}' FS=.)
GATEWAY_NEW=$(echo ${VMK0_NEW_IPADDR} | awk '{print $1"."$2"."$3".1"}' FS=.)
echo "VMK1=${VMK1_IPADDR} VMK2=${VMK2_IPADDR} VMK3=${VMK3_IPADDR} NEW-VMK0=${VMK0_NEW_IPADDR} NEW-GATEWAY=${GATEWAY_NEW}" > /tmp/networkconfig.new
esxcli network ip interface add -p vssVMotion -m 9000 -i vmk1
esxcli network ip interface ipv4 set -i vmk1 -I ${VMK1_IPADDR} -N 255.255.255.0 -t static
esxcli network ip interface tag add -i vmk1 -t VMotion
esxcli network ip interface add -p vssipStorage -m 9000 -i vmk2
esxcli network ip interface ipv4 set -i vmk2 -I ${VMK2_IPADDR} -N 255.255.255.0 -t static
esxcli network ip interface add -p vssVSAN -m 9000 -i vmk3
esxcli network ip interface ipv4 set -i vmk3 -I ${VMK3_IPADDR} -N 255.255.255.0 -t static
# Change and Migrate vmk0
esxcli network ip interface remove -i vmk0
esxcli network ip interface add -p vssHostManagement -m 1500 -i vmk0
esxcli network ip interface ipv4 set --interface-name vmk0 --ipv4 ${VMK0_NEW_IPADDR} --netmask 255.255.255.0 --type static
esxcli network ip route ipv4 add -n 0.0.0.0/0 -g ${GATEWAY_NEW}
esxcli network ip interface tag add -i vmk0 -t Management

# Remove unnecessary Port Groups
esxcli network vswitch standard portgroup remove -p "VM Network" -v vSwitch0
esxcli network vswitch standard portgroup remove -p "Management Network" -v vSwitch0

# Disable IPv6 for VMkernel interfaces
esxcli system module parameters set -m tcpip3 -p ipv6=0

###### FIREWALL #######

esxcli network firewall ruleset set --enabled=true --ruleset-id=ntpClient

###### STORAGE #######

# Local Storage #
vim-cmd hostsvc/datastore/rename datastore1 "$(hostname -s)-localdisk-01"

# iSCSI Storage #
esxcli iscsi software set -e true

# iSCSI Storage - White-Box Hosts #

esxcli iscsi networkportal add -A vmhba36 -n vmk2
#esxcli iscsi adapter discovery sendtarget add -A vmhba36 -a 10.5.0.5:3260
#esxcli iscsi adapter discovery rediscover -A vmhba36
# NFS Storage - White-Box Hosts #
#esxcli storage nfs add -H 10.5.0.5 -s cloud_management -v cloud_management
#esxcli storage nfs add -H 10.5.0.5 -s cloud_images -v cloud_images
#esxcli storage nfs add -H 10.5.0.5 -s cloud_vms -v cloud_vms

###### SAVE #######
/sbin/auto-backup.sh

%firstboot --interpreter=python